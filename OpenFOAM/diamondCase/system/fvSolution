// vim:syntax=cpp:ts=2:et
/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2412                                  |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
  version     2.0;
  format      ascii;
  arch        "LSB;label=32;scalar=64";
  class       dictionary;
  location    "system";
  object      fvSolution;
}
//===========================================================================//
#include      "../VarParams"

solvers
{
  "p"
  {
    solver          GAMG;
    tolerance       1e-8;
    relTol          1e-6;
    smoother        GaussSeidel;
    nPreSweeps      1;
    nPostSweeps     2;
    minIter         3;
  }

  "U"
  {
    solver          PBiCG;
    preconditioner  DILU;
    tolerance       1e-8;
    relTol          1e-6;
    minIter         3;
  }

  "k"
  {
    solver          PBiCG;
    preconditioner  DILU;
    tolerance       1e-8;
    relTol          1e-6;
    minIter         3;
  }

  "omega"
  {
    solver          PBiCG;
    preconditioner  DILU;
    tolerance       1e-8;
    relTol          1e-6;
    minIter         3;
  }

  "h"
  {
    solver          PBiCG;
    preconditioner  DILU;
    tolerance       1e-8;
    relTol          1e-6;
    minIter         3;
  }

  // XXX: Is this always correct?
  "rho"
  {
    solver          diagonal;
  }
}

SIMPLE
{
  // XXX: What does it mean exactly? -- These params apparently make more harm
  // than good...
  // transonic      yes;
  // consistent     yes;

  nOuterCorrectors  3;
  nCorrectors       3;
  nNonOrthogonalCorrectors 3;
  pMin              1e4;
  pMax              1e6;

  // The following may be required in the SuperSonic mode:
  #include          "pCorr"

  residualControl
  {
    p     1e-2;
    U     1e-2;
    k     1e-2;
    omega 1e-2;
    h     1e-2;
  }
}

relaxationFactors
{
  // XXX: May need to reduce them further?
  fields
  {
    T       0.3;
    p       0.3;
    rho     0.001;
  }

  equations
  {
    U       0.3;
    h       0.3;
    k       0.3;
    omega   0.3;
  }
}
