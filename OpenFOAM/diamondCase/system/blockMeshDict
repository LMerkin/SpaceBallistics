// vim:syntax=cpp:ts=2:et
/*--------------------------------*- C++ -*----------------------------------*\\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\\*--------------------------------------------------------------------------*/
FoamFile
{
  version   2.0;
  format    ascii;
  arch      "LSB;label=32;scalar=64";
  class     dictionary;
  location  "system";
  object    blockMeshDict;
}
//===========================================================================//
scale 1;

//===========================================================================//
// Vertices:                                                                 //
//===========================================================================//
vertices
(
  //-------------------------------------------------------------------------//
  // z=0: The over-all Bounding Box:                                         //
  //-------------------------------------------------------------------------//
  ( 0     0  0)   // 0
  (10     0  0)   // 1
  (10    10  0)   // 2
  ( 0    10  0)   // 3
  //-------------------------------------------------------------------------//
  // z=0: The Diamond:                                                       //
  //-------------------------------------------------------------------------//
  // Center @ (5, 3, 0):  it is located in the lower part of the Bounding Box,
  // to account for the angle of attack of the incoming flow;    thin profile:
  // halfLength = 0.5, halfHeight = 0.05:
  (4.5    3  0)   // 4
  (5   2.95  0)   // 5
  (5.5    3  0)   // 6
  (5   3.05  0)   // 7
  //-------------------------------------------------------------------------//
  // "Technical" Vertices (rqeuired to complete the Blocks below):           //
  //-------------------------------------------------------------------------//
  (4.5    0  0)   // 8
  (5      0  0)   // 9
  (5.5    0  0)   // 10
  (0      3  0)   // 11
  (10     3  0)   // 12
  (4.5   10  0)   // 13
  (5     10  0)   // 14
  (5.5   10  0)   // 15
  //-------------------------------------------------------------------------//
  // And now all the same for z=1:                                           //
  //-------------------------------------------------------------------------//
  // The over-all Bounding Box:
  ( 0     0  1)   // 16
  (10     0  1)   // 17
  (10    10  1)   // 18
  ( 0    10  1)   // 19
  // The Diamond:
  (4.5    3  1)   // 20
  (5   2.95  1)   // 21
  (5.5    3  1)   // 22
  (5   3.05  1)   // 23
  // "Technical" Vertices:
  (4.5    0  1)   // 24
  (5      0  1)   // 25
  (5.5    0  1)   // 26
  (0      3  1)   // 27
  (10     3  1)   // 28
  (4.5   10  1)   // 29
  (5     10  1)   // 30
  (5.5   10  1)   // 31
);

//===========================================================================//
// Blocks (in the Air Space):                                                //
//===========================================================================//
// CellSize=0.05_m in X ~0.05_m in Y, 1.0_m in Z:
blocks
(
  // ULL (Upper-Left-Left):
  hex (11  4 13  3 27 20 29 19) (90 140 1) simpleGrading (1 1 1)

  // UML (Upper-Middle-Left):
  hex ( 4  7 14 13 20 23 30 29) (10 140 1) simpleGrading (1 1 1)

  // UMR (Upper-Middle-Right):
  hex ( 7  6 15 14 23 22 31 30) (10 140 1) simpleGrading (1 1 1)

  // URR (Upper-Right-Right):
  hex ( 6 12  2 15 22 28 18 31) (90 140 1) simpleGrading (1 1 1)

  // LLL (Lower-Left-Left):
  hex ( 0  8  4 11 16 24 20 27) (90  60 1) simpleGrading (1 1 1)

  // LML (Lower-Middle-Left):
  hex ( 8  9  5  4 24 25 21 20) (10  60 1) simpleGrading (1 1 1)

  // LMR (Lower-Middle-Right):
  hex ( 9 10  6  5 25 26 22 21) (10  60 1) simpleGrading (1 1 1)

  // LRR (Lower-Right-Right):
  hex (10  1 12  6 26 17 28 22) (90  60 1) simpleGrading (1 1 1)
);

//===========================================================================//
// Edges: Empty, as they are for non-linear edges only:                      //
//===========================================================================//
edges ();

//===========================================================================//
// External Boundary:                                                        //
//===========================================================================//
boundary
(
  //-------------------------------------------------------------------------//
  // inLet: Left and Bottom:                                                 //
  //-------------------------------------------------------------------------//
  inLet
  {
    type  patch;
    faces
    (
      // Clock-wise looking from INSIDE the corresp Blocks:
      ( 3 11 27 19)   // Left   of ULL
      (11  0 16 27)   // Left   of LLL
      ( 0  8 24 16)   // Bottom of LLL
      ( 8  9 25 24)   // Bottom of LML
      ( 9 10 26 25)   // Bottom of LMR
      (10  1 17 26)   // Bottom of LRR
    );
  }

  //-------------------------------------------------------------------------//
  // outLet: Right and Top:                                                  //
  //-------------------------------------------------------------------------//
  outLet
  {
    type  patch;
    faces
    (
      // Clock-wise looking from INSIDE the corresp Blocks:
      ( 2 18 28 12)   // Right  of URR
      ( 1 12 28 17)   // Right  of LRR
      ( 3 19 29 13)   // Top    of ULL
      (13 29 30 14)   // Top    of UML
      (14 30 31 15)   // Top    of UMR
      (15 31 18  2)   // Top    of URR
    );
  }

  //-------------------------------------------------------------------------//
  // diamondWall:                                                            //
  //-------------------------------------------------------------------------//
  diamondWall
  {
    type  wall;
    faces
    (
      ( 4 20 23  7) // Bottom of Upper-Mid-Left
      ( 7 23 22  6) // Bottom of Upper-Mid-Right
      ( 4  5 21 20) // Top    of Lower-Mid-Left
      ( 5  6 22 21) // Top    of Lower-Mid-Right
    );
  }

  //-------------------------------------------------------------------------//
  // Empty Boundary Conds @ z=0 and z=1 (because we are 2D only):            //
  //-------------------------------------------------------------------------//
  backAndFront
  {
    type  empty;
    faces
    (
      // Back (z=0):  Clock-Wise:
      // Upper:
      (13  4 11  3)
      (14  7  4 13)
      (15  6  7 14)
      ( 2 12  6 15)
      // Lower:
      ( 4  8  0 11)
      ( 5  9  8  4)
      ( 6 10  9  5)
      (12  1 10  6)

      // Front (z=1): Anti-Clock-Wise:
      // Upper:
      (27 19 29 20)
      (20 29 30 23)
      (23 30 31 22)
      (22 31 18 28)
      // Lower:
      (16 27 20 24)
      (24 20 21 25)
      (25 21 22 26)
      (26 22 28 17)
     );
  }
)

//===========================================================================//
// Misc:                                                                     //
//===========================================================================//
mergePatchPairs();

