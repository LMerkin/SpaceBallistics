// vim:syntax=cpp:ts=2:et
/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2112 (or your installed version)     |
|   \\  /    A nd           | Web:      www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
foamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}

// Time schemes:
ddtSchemes
{
    // Steady-state simulation: No time evolution:
    default         steadyState;
}

// Gradient schemes:
gradSchemes
{
    default         Gauss linear;
}

// Divergence schemes:
divSchemes
{
    default         none;

    div(phi,U)      Gauss linearUpwind grad(U);
    div(phi,k)      Gauss upwind;
    div(phi,alpha)  Gauss upwind;          // Convective term for other scalars
    div(phi,k)      Gauss upwind;          // Turbulent kinetic energy
    div(phi,omega)  Gauss upwind;          // Turbulent dissipation
    div(phi,e)      Gauss upwind;          // Energy equation
    div(phi,omega)  Gauss upwind;

    // Viscous stress term (since we model the turbulence effects):
    div((muEff*dev(T(grad(U))))) Gauss linear;
}

// Laplacian schemes:
laplacianSchemes
{
    default                Gauss linear corrected;
    laplacian(nuTilda,U)   Gauss linear;
}

// Interpolation schemes:
interpolationSchemes
{
    default         linear;
}

// SnGrad schemes:
snGradSchemes
{
    // XXX: The following is more stable in case of shock waves:
    default         limitedLinear 1
}

// Wall distance calculation:
wallDist
{
    method          meshWave;
}
//===========================================================================//

