// vim:syntax=cpp:ts=2:et
/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2112 (or your installed version)     |
|   \\  /    A nd           | Web:      www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
  version     2.0;
  format      ascii;
  arch        "LSB;label=32;scalar=64";
  class       dictionary;
  location    "system";
  object      fvSchemes;
}
//===========================================================================//
ddtSchemes
{
    // Steady-state simulation: No time evolution:
    default         steadyState;
}

gradSchemes
{
    default         Gauss linear;
    grad(U)         cellMDLimited Gauss linear 1;
    // grad(p)      leastSquares;
}

// NB: "bounded" divSchemes are applicable because we are in a Steady-State:
divSchemes
{
    default         none;

    div(phi,U)      bounded Gauss linearUpwindV grad(U);
    // div(phi,U)   bounded Gauss linearUpwind  grad(U);
    // div(phi,U)   bounded Gauss Minmod;

    div(phi,K)      bounded Gauss limitedLinear 1;
    div(phi,h)      bounded Gauss limitedLinear 1;

    div(phid,p)     bounded Gauss limitedLinear 1;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
}

// XXX: "laplacianSchemes" are required in inviscid cases as well, don't remove
// them!
laplacianSchemes
{
    default         Gauss linear limited 0.5;
    // default      Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         limited 0.5;
    // default      corrected;
}

// Wall distance calculation: XXX: Do we really need it?
wallDist
{
    method          meshWave;
}
